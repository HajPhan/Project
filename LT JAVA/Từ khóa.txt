                   ===============================/*/ Tieng Anh Trong Java /*/============================================


1. Class : l?p 

2. Interface : giao di?n 

3. Opjexct : ð?i tý?ng

4. Template : khuôn m?u 

5. Methods : phýõng th?c

//các ti?n t? trong java
{

6. Public : công c?ng        // có th? truy su?t t? t?t c? các ð?i tý?ng khác

7. Private : rieng tý       // m?t l?p không th? truy su?t vùng Private c?a m?t l?p khác

8. Protected : b?o v?      //  vùng Protected c?a 1 l?p ch? cho phép b?n thân l?p ðó và nh?ng l?p d?n su?t t? l?p ðó truy c?p ð?n

9. Static : t?nh          // phýõng th?c l?p dùng chung cho t?t c? các th? hi?n c?a l?p, có ngh?a là phýõng th?c ðó có th? ðý?c th?c
                         //  hien k? c? khi không có ð?i tý?ng c?a l?p ch?a phýõng th?c ðó

10. Final : cu?i cùng   // phýõng th?c có ti?n t? này không ðý?c khai báo ch?ng ? các l?p d?n su?t

11. Abstract : tr?u tý?ng // phýõng th?c không c?n cài ð?t ( không có ph?n source code ), s? ðý?c hi?n th?c trong các l?p d?n su?t t? l?p này
 
12. Synchoronized : ð?ng b? // dùng ð? ngãn các tác ð?ng c?a các ð?i tý?ng khác lên ð?i tý?ng ðang xét trong khi ðang ð?ng b? hóa .
                            // Dùng trong l?p tr?nh miltithreads.

13. Contructor :  ð?i tý?ng

14. Default : m?c ð?nh 

15. This : ði?u này      // dùng trong khi ch?y và tham kh?o ð?n b?n thân l?p ch?a nó.

16. Overrloading Method : ch?ng phýõng th?c    

16. Encapsulation : ðóng gói 

17. Polymorphism : ða h?nh 

18. Inheritance : k? th?a 

  }  


-------------------------------------------------------------------------------------
  for      ==   while       ==   do
  if       ==   else        ==   void
  switch   ==   case        ==   default
  try      ==   catch       ==   finally
  this     ==   import      ==   synchronized
  throw    ==   throws      ==   package
  enum     ==   assert      ==   super
  extends  ==   implements  ==   continue
 { th?a k? gi?a hai class ho?c hai interface}  { th?a k? m?t class hoãc m?t interface } 
  break    ==   return      ==   new
       -